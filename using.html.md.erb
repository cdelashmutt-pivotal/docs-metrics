---
breadcrumb: Pivotal App Metrics Documentation
title: Monitoring and Troubleshooting Apps with Pivotal App Metrics
owner: Pivotal App Metrics
list_style_none: true 
---

<p class="note warning"><b>Warning:</b> Pivotal App Metrics v2.0 is in Beta. To provide feedback on Pivotal App Metrics v2.0, email <a href="mailto:pivotal-app-metrics@pivotal.io">pivotal-app-metrics@pivotal.io</a>.</p>

This topic describes how developers can monitor and troubleshoot their apps using Pivotal App Metrics. 

## <a id="overview"></a> Overview

Pivotal App Metrics helps you understand and troubleshoot the health and performance of your apps by offering the following indicators, data, and visualizations:

* [Latency](#latency): Response times for your application
* [Traffic](#traffic): Number of requests made for your application
* [Errors](#errors): HTTP errors thrown by your application
* [Saturation (Container Metrics)](#saturation): Three charts measuring CPU, memory, and disk consumption percentages 
* [Custom Metrics](#custom-metrics): User-customizable charts for measuring app performance, such as Spring Boot Actuator and Micrometer metrics, or user-defined custom business metrics
* [App Events](#events): A chart of update, start, stop, crash, SSH, and staging failure events
* [Logs](#logs): A list of app logs that you can search, filter, and download

The following sections describe a standard workflow for using Pivotal App Metrics to monitor or troubleshoot your apps.

##<a id='get-started'></a> View an App

In a browser, navigate to `appmetrics.YOUR-SYSTEM-DOMAIN` and log in with your User Account and Authentication (UAA) credentials. Choose an app from the search bar for which you want to view metrics and/or logs. Pivotal App Metrics respects UAA permissions such that you can view any app that runs in a space that you have access to. 

Pivotal App Metrics displays app data for a given time frame. See the sections below to [Change the Time Frame](#time) for the dashboard.

## <a id="time"></a>Change the Time Frame

The charts show time along the horizontal axis. You can change the time frame for all charts and the logs by using the time selector options at the top of the window. You can select from several pre-set timescales or select a custom date range.

**Zoom**: From within any chart, click and drag to zoom in on areas of interest. This adjusts all of the charts, and the logs, to show data from that time frame.

## <a id="auto-refresh"></a>Auto-Refreshing the Dashboard

Auto-refresh mode allows the metrics charts and logs on your dashboard to be updated on a timed interval as data is ingested.

To enable auto-refresh, click the **REFRESH** button next to the time selection options on the top right of the dashboard. This will enable live updating of metrics and logs data for the currently selected timeframe.

<p class="note"><strong>Note</strong>: The default auto-refresh interval is set to one minute and is currently not configurable.</p>

## <a id="app-instance"></a>View Metrics at the Process and Application Instance Level

Pivotal App Metrics relays metric data at the app process level to allow for an in-depth troubleshooting experience, even across rolling deployment. Users are able to view the app metrics related to a specific process and further drill down into specific instances within those processes, which correlates directly with the processes and app instances shown in [Apps Manager](https://docs.pivotal.io/pivotalcf/console/manage-apps.html#manage-app).

The dashboard will display metrics aggregated across all processes by default. To view metrics by specific process, select a process type from the dropdown near the upper-left of the dashboard.

With a specific process type selected, the metrics charts will display aggregate data from all instances within the selected process type.

To view metrics for the individual instances within the selected process, select the "Instances" radio button at the upper-right of the dashboard.

To view metrics for a specific app instance (or selection of specific instances), select the desired instance(s) from the legend along the bottom of any chart on the dashboard while the "Instances" radio is selected.

##<a id='metrics'></a> Interpreting Metrics

The default metrics charts included with Pivotal App Metrics provide high-level indicators of the Four Golden Signals for monitoring the health of applications running on distributed systems: Latency, Traffic, Errors, Saturation.

The following sections explain how to use each of the charts on the dashboard to monitor and troubleshoot your app.

### <a id='latency'></a> Latency

* Average latency of a request in milliseconds:<br><br>A spike in response time means your users are waiting longer. Scaling app instances can spread that workload over more resources and result in faster response times.

### <a id='traffic'></a> Traffic

* Number of network requests per minute:<br><br>A spike in HTTP requests means more users are using your app. Scaling app instances can reduce the response time.

### <a id='errors'></a> Errors

* Number of network request errors per minute:<br><br>A spike in HTTP errors means one or more 5xx errors have occurred. Check your app logs for more information.

### <a id='saturation'></a> Saturation (Container Metrics)

The following **Container Metrics** charts are available on the Pivotal App Metrics dashboard to help monitor resource saturation:

* CPU usage percentage:<br><br>A spike in CPU might point to a process that is computationally heavy. Scaling app instances can relieve the immediate pressure, but you need to investigate the app to better understand and fix the root cause.<br><br>

* Memory usage percentage:<br><br>A consistent, gradual increase in memory might mean a resource leak in the code. Scaling app memory can relieve the immediate pressure, but you need to find and resolve the underlying issue so that it does not occur again.<br><br>

* Disk usage percentage:<br><br>A spike in disk might mean the app is writing logs to files instead of STDOUT, caching data to local disk, or serializing large sessions to disk.

### <a id='events'></a> Events 

In addition, the **Events** chart helps to correllate these metrics to events for your app, including: **Crash**, **Fail** (staging failures), **Update**, **Stop**, **Start**, and **SSH**. 

<p class="note"><strong>Note</strong>: The <b>SSH</b> event corresponds to someone successfully using SSH to access a container that runs an instance of the app.</p>

See the following topics for more information about app events:

* [About Starting Applications](https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/start-restart-restage.html)
* [Troubleshooting Application Deployment and Health](https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/troubleshoot-app-health.html)

##<a id='custom-metrics'></a> Adding Custom Metrics Charts

You can add custom metrics charts to your dashboard, including Spring Boot Actuator and Micrometer metrics, by defining the custom metrics you want to monitor and including them in an indicator document for your application.

In order to get custom, Actuator, or Micrometer metrics into the Metrics Store, you will need to bind Metric Registrar to your app and register your endpoint. For more information, see [Configuring the Metric Registrar](https://docs.pivotal.io/pivotalcf/metric-registrar/index.html).

If you want to view custom metrics, you can configure your apps to emit those metrics out of the [Loggregator Firehose](https://docs.pivotal.io/pivotalcf/loggregator/architecture.html#firehose) and then view these metrics on the Pivotal App Metrics dashboard.

In addition, Spring Boot apps with actuators or Micrometer metrics implemented emit [these metrics](https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-metrics.html) out of the box, without any changes to source code.

### Creating an Indicator Document
The first step to adding a custom metric chart to your dashboard after verifying that the metrics are being emitted to the firehose will be to verify its name for the indicator document.

If you are using a Prometheus-style metrics endpoint, you can do so by hitting your app's metrics endpoint at `app.domain/metrics` and looking for the desired metric.

To validate Spring Boot Actuator and Micrometer metrics, please see the [Spring Boot documentation](https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-metrics.html).

Once you have the metric name you can create your indicator document that will define the chart you want to add to your dashboard. The following is an example of the YAML for an indicator document:

<pre>
---
apiVersion: indicatorprotocol.io/v1
kind: IndicatorDocument

metadata:
  labels:
    deployment: "my deployment name"

spec:
  product:
    name: org,space,app-name
    version: 0.0.1

  indicators:
    - name: "Custom 500 Error Indicator"
      promql: "sum(avg_over_time(customMetricName500{source_id=\"$sourceId\"}[1m]))"
      documentation:
        title: "Custom Metric 500 Errors
      presentation:
        units: "none"
</pre>

Please note that `org,space,app-name` above is reponsible for defining which application these indicators will be applied to. Please replace this with the org, space, and app name of the application dashboard you wish to customize.

For more information about indicator formatting, please see the [Indicator Protocol Repo](https://github.com/pivotal/monitoring-indicator-protocol).

<p class="note"><strong>Note</strong>: At this time, only the `name`, `promql`, `documentation`, and `presentation` fields are supported for application indicators.</p>

Additional example PromQL can also be found for any of the default charts on the dashboard by clicking the `Info` menu in the upper-right of any chart, or by visiting the [PromQL Query Examples](https://prometheus.io/docs/prometheus/latest/querying/examples/) documentation.

### cURLing Your Indicator Document to Pivotal App Metrics (Beta)
Once you have your indicator document prepared, you can push it to App Metrics via cURL.

Unix:
<pre>curl -vvv https://appmetrics.sys.DOMAIN/indicator-documents -H "Authorization: $(cf oauth-token)" --data-binary "@[YourDoc.yml]"</pre>

Windows:
1. Copy your cf oath token to the clipboard: `cf oauth-token`
2. Paste your oauth token into the following command: 
<pre>curl -vvv https://appmetrics.sys.DOMAIN/indicator-documents -H "Authorization: [YOUR TOKEN]" --data-binary "@[YourDoc.yml]"</pre>

<p class="note"><strong>Note</strong>: You can only push indicators for applications that run in a space that you have access to.</p>

Once you have your indicator document created, you can also automate the deployment of application indicator documents within your deployment pipeline.

### Custom Metric Demos

* [Adding custom application metric charts using Indicator Protocol](https://www.youtube.com/watch?v=KKed-LwJ0BM)
* [Creating a custom dashboard to monitor multiple applications](https://www.youtube.com/watch?v=d1gtLtdiOa4)
* [Platform-level metric charts to the dashboard](https://www.youtube.com/watch?v=z7CVbYzjxVU)

##<a id="logs"></a>Logs

The **Logs** view displays app log data ingested from the Loggregator Reverse Log Proxy (RLP):

<p class="note"><strong>Note</strong>: Logs with non-UTF-8 characters or non-standard UUID application GUIDs are not stored.</p>

You can interact with the **Logs** view in the following ways:

* **Keyword**: Perform a keyword search. While filtering on keywords, logs results will be reduced to only display log lines that contain the matching criteria. Matching terms will also be highlighted in blue.
* **Highlight**: Enter a term to visually highlight within your search. The terms will be highlighted in orange within the current filter results.
* **Sources**: Choose which sources to display logs from. For more information, see [Log Types and Their Messages](https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/streaming-logs.html#format).
* **Download**: Download a file containing logs for the current search. 
* **Copy**: Click the copy icon to copy the text of the log.

By default, the most recent 1,000 log lines will be displayed in the logs drawer. You can click `SHOW 1000 MORE LOGS` to load more.
