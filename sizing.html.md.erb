---
breadcrumb: PCF App Metrics Documentation
title: Sizing PCF App Metrics for Your System 
owner: PCF App Metrics
list_style_none: true
---

No content at this time.

<!-- This topic describes how operators configure Pivotal Cloud Foundry (PCF) App Metrics depending on their deployment size. 
Operators can use these procedures to optimize PCF App Metrics for high capacity or to reduce resource usage for smaller deployment sizes.

After your deployment has been running for a while, use the information in this topic to scale your running deployment. 

If you are not familiar with the PCF App Metrics components, review [PCF App Metrics Product Architecture](./architecture.html) before reading this topic.

For how to configure resources for a running deployment, see the procedures below:

+ [Procedure for Scaling the Metrics Datastore](#metrics-procedures)
+ [Procedure for Scaling the Log Datastore](#log-procedures)
+ [Procedure for Scaling the Temporary Datastore](#temp-procedures)
+ [Procedure for Scaling the Ingestor, Logqueues, and Metrics API](#ingestor-procedures)

## Suggested Sizing by Deployment Size

Use the following tables as a guide for configuring resources for your deployment. 

Estimate the size of your deployment according to how many apps are expected to be deployed.

<table style='nice'>
   <tr><th>Size</th><th>Purpose</th><th>Approximate number of app instances</th></tr>
   <tr><td><a href="#small">Small</a></td><td>Test use</td><td>100</td></tr>
   <tr><td><a href="#medium">Medium</a></td><td>Production use</td><td>5,000</td></tr>
   <tr><td><a href="#large">Large</a></td><td>Production use</td><td>15,000</td></tr>
</table>

If you are using Metrics Forwarder and custom metrics, you might need to scale up the MySQL Server instance
more than indicated in the tables below. 
Pivotal recommends you start with the one of the following configurations and scale up as necessary 
by following the steps in <a href="#metrics-datastore">Configuring the Metrics Datastore</a>.

###Deployment Resources for a Small Deployment

Example resource configuration to store approximately 14 days of data for a small deployment, about 100 application instances:



###Deployment Resources for a Medium Deployment

Example resource configuration to store approximately 14 days of data for a medium deployment, about 5000 application instances:



###Deployment Resources for a Large Deployment

Example resource configuration to store approximately 14 days of data for a large deployment, about 15,000 application instances:




## Scale the Metrics Datastore


PCF App Metrics stores metrics in a single MySQL node.
For PCF deployments with high app logs load, you can add memory and persistent disk to the MySQL server node.

### Considerations for Scaling the Metrics Datastore


###Procedure for Scaling

Do the following to scale up the MySQL server node: 


## Scale the Log Datastore

PCF App Metrics uses Postgres to store logs.

###Considerations for Scaling



###Procedure for Scaling



## Scale the Temporary Datastore (Redis)

PCF App Metrics uses Redis to temporarily store ingested data from the Loggregator Firehose
as well as cache data queried by the Metrics API.
The former use case is to prevent major metrics and logs loss when the data stores (Postgres and MySQL) are unavailable.
The latter is to potentially speed up front-end queries. See [PCF App Metrics Product Architecture](./architecture.html) for more information.

###Considerations for Scaling


### Procedure for Scaling

Follow these steps to configure the size of the Redis VM for the temporary datastore based on your calculations.


## Scale the Ingestor, Logqueues, Alerting, and Metrics API



### Considerations for Scaling

Pivotal recommends starting with the configuration in [Suggested Sizing by Deployment Size](#configs-by-size) above, for your deployment size
and then evaluating performance over a period of time and scaling upwards if performance degrades. 

###Procedure for Scaling


For more information about scaling app instances, see [Scaling an Application Using cf scale](http://docs.pivotal.io/pivotalcf/devguide/deploy-apps/cf-scale.html).

 -->